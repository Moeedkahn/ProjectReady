package com.example.lenovo.project;

import android.app.ProgressDialog;
import android.content.Intent;
import android.hardware.fingerprint.FingerprintManager;
import android.support.annotation.NonNull;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ProgressBar;
import android.widget.Toast;

import com.google.android.gms.ads.AdRequest;
import com.google.android.gms.ads.AdView;
import com.google.android.gms.ads.MobileAds;
import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;

import java.util.regex.Pattern;

public class Register extends AppCompatActivity {
    EditText Name;
    EditText Email;
    EditText Password;
    EditText Phone;
    EditText Address;
    Button Registerr;
    String mName;
    String mEmail;
    String mPassword;
    String mPhone;
    String mAddress;
    ProgressDialog progressBar;
    private FirebaseAuth firebaseAuth;
    private static final String APP_ID="ca-app-pub-3940256099942544~3347511713";
    AdView mAdview;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_register);
        MobileAds.initialize(this,APP_ID);
        mAdview=(AdView) findViewById(R.id.adView3);
        AdRequest adRequest=new AdRequest.Builder().build();
        mAdview.loadAd(adRequest);

        Name=findViewById(R.id.registerName);
        Email=findViewById(R.id.registeremail);
        Password=findViewById(R.id.registerPasswaord);
        Phone=findViewById(R.id.registerPhone);
        Address=findViewById(R.id.registerAddress);
        Registerr=findViewById(R.id.registerRegister);

        progressBar=new ProgressDialog(this);

        firebaseAuth=FirebaseAuth.getInstance();

        Registerr.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if(RegisterUser()) {
                    progressBar.setMessage("Registering in Progress....");
                    progressBar.show();

                    firebaseAuth.createUserWithEmailAndPassword(mEmail, mPassword).addOnCompleteListener(Register.this, new OnCompleteListener<AuthResult>() {
                        @Override
                        public void onComplete(@NonNull Task<AuthResult> task) {
                            if (task.isSuccessful()) {
                                progressBar.dismiss();
                                DatabaseReference userTableRef= FirebaseDatabase.getInstance().getReference("users");
                                User u1=new User();
                                u1.useremail=Email.getText().toString();
                                u1.password=Password.getText().toString();
                                u1.address=Address.getText().toString();
                                u1.phno=Phone.getText().toString();
                                String autogeneratedKey=userTableRef.push().getKey();
                                userTableRef.child(autogeneratedKey).setValue(u1);
                                sendEmailVerification();

                            } else {
                                progressBar.dismiss();
                                Toast.makeText(getApplicationContext(), "Unsuccessful", Toast.LENGTH_SHORT).show();
                            }
                        }
                    });
                }
            }
        });
    }

    public boolean RegisterUser()
    {
        mName=Name.getText().toString();
        mEmail=Email.getText().toString();
        mPassword=Password.getText().toString();
        mPhone=Phone.getText().toString();
        mAddress=Address.getText().toString();
        if(TextUtils.isEmpty(mName))
        {
            Toast.makeText(this,"Please Enter Name",Toast.LENGTH_SHORT).show();
            return false;
        }
        if(TextUtils.isEmpty(mEmail))
        {
            Toast.makeText(this,"Please Enter Email",Toast.LENGTH_SHORT).show();
            return false ;
        }
        if(TextUtils.isEmpty(mPassword))
        {
            Toast.makeText(this,"Please Enter Password",Toast.LENGTH_SHORT).show();
            return false ;
        }
        if(!checkString(mPassword))
        {
            Toast.makeText(this,"Password must have A-Z and a-z and 0-9",Toast.LENGTH_SHORT).show();
            return false ;
        }
        if(mPassword.length()<6)
        {
            Toast.makeText(this,"length of Password must be greater than 5",Toast.LENGTH_SHORT).show();
            return false ;
        }

        if(TextUtils.isEmpty(mPhone))
        {
            Toast.makeText(this,"Please Enter Phone",Toast.LENGTH_SHORT).show();
            return false ;
        }
        if(TextUtils.isEmpty(mAddress))
        {
            Toast.makeText(this,"Please Enter Address",Toast.LENGTH_SHORT).show();
            return false;
        }
        return true;
    }
    private  boolean checkString(String str) {
        char ch;
        boolean capitalFlag = false;
        boolean lowerCaseFlag = false;
        boolean numberFlag = false;
        for(int i=0;i < str.length();i++) {
            ch = str.charAt(i);
            if( Character.isDigit(ch)) {
                numberFlag = true;
            }
            else if (Character.isUpperCase(ch)) {
                capitalFlag = true;
            } else if (Character.isLowerCase(ch)) {
                lowerCaseFlag = true;
            }
            if(numberFlag && capitalFlag && lowerCaseFlag)
                return true;
        }
        return false;
    }
    public void sendEmailVerification()
    {
        FirebaseUser firebaseUser=firebaseAuth.getInstance().getCurrentUser();
        if(firebaseUser != null)
        {
            firebaseUser.sendEmailVerification().addOnCompleteListener(new OnCompleteListener<Void>() {
                @Override
                public void onComplete(@NonNull Task<Void> task) {
                    if(task.isSuccessful())
                    {
                        Toast.makeText(getApplicationContext(), "Registered Successfully", Toast.LENGTH_SHORT).show();
                        firebaseAuth.signOut();
                        finish();
                        Intent i = new Intent(Register.this, MainActivity.class);
                        startActivity(i);
                    }
                    else
                    {
                        Toast.makeText(getApplicationContext(), "Problem With Internet Connectivity", Toast.LENGTH_SHORT).show();
                    }

                }
            });
        }
    }

    @Override
    protected void onSaveInstanceState(Bundle outState) {
        super.onSaveInstanceState(outState);

        try {
            outState.putString("regName", Name.getText().toString());
            outState.putString("em", Email.getText().toString());
            outState.putString("pw", Password.getText().toString());
            outState.putString("ph", Phone.getText().toString());
            outState.putString("add", Address.getText().toString());
        }catch (Exception e){
            e.printStackTrace();
        }

    }

    @Override
    protected void onRestoreInstanceState(Bundle savedInstanceState) {
        super.onRestoreInstanceState(savedInstanceState);

        try {
            Name.setText(savedInstanceState.getString("regName"));
            Email.setText(savedInstanceState.getString("em"));
            Password.setText(savedInstanceState.getString("pw"));
            Phone.setText(savedInstanceState.getString("ph"));
            Address.setText(savedInstanceState.getString("add"));
        }catch (Exception e){
            e.printStackTrace();
        }
    }
}
